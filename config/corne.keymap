/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    bindings = <&kp>, <&kp>;
};

/ {
    combos {
        compatible = "zmk,combos";

        qwerty_toggle {
            bindings = <&to 8>;
            key-positions = <11 0>;
        };

        lpar {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 5>;
        };

        rpar {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        lbkt {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 17>;
        };

        rbkt {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 19>;
        };

        rbrc {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <30 31>;
        };

        lbrc {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <28 29>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow_right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <39 36 37 38 0 1 2 3 4 12 13 14 15 16 24 25 26 27 28 3 4 5 15 16 17 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB      &kp Q            &kp W            &kp F                &kp P              &kp B        &kp J        &kp L               &kp U                 &kp Y             &kp SEMI          &kp BSPC
&kp LCTRL    &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LEFT_CONTROL S  &hml LEFT_SHIFT T  &kp G        &kp M        &hmr RIGHT_SHIFT N  &hmr RIGHT_CONTROL E  &hmr RIGHT_ALT I  &hmr RIGHT_GUI O  &kp SQT
&shift_caps  &kp Z            &kp X            &kp C                &kp D              &kp V        &kp K        &kp H               &kp COMMA             &kp DOT           &kp FSLH          &kp ESC
                                               &lt 6 ESCAPE         &lt 2 SPACE        &lt 3 TAB    &lt 4 ENTER  &lt 1 BACKSPACE     &lt 5 DELETE
            >;

            label = "BASE";
        };

        number_layer {
            bindings = <
&trans  &kp MINUS  &kp N7  &kp N8   &kp N9  &kp PLUS     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp SLASH  &kp N4  &kp N5   &kp N6  &kp ASTRK    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp COLON  &kp N1  &kp N2   &kp N3  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans
                           &kp DOT  &kp N0  &trans       &trans  &trans  &trans
            >;

            label = "NUMBER";
        };

        navigation_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_AC_REDO  &kp C_AC_CUT   &kp C_AC_COPY  &kp C_AC_PASTE  &kp C_AC_UNDO  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &caps_word     &kp LEFT       &kp DOWN       &kp UP          &kp RIGHT      &none
&trans  &trans  &trans  &trans  &trans  &trans    &kp INS        &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP     &kp END        &trans
                        &trans  &trans  &trans    &kp RET        &kp BACKSPACE  &kp DELETE
            >;

            label = "NAV";
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_AC_REDO  &kp C_AC_PASTE  &kp C_AC_COPY   &kp C_AC_CUT  &kp C_AC_UNDO    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp MB5       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp MB4       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans
                        &trans  &trans  &trans    &mkp MB1       &mkp MB3        &mkp MB2
            >;

            label = "MOUSE";
        };

        symbol_layer {
            bindings = <
&trans  &kp GRAVE          &kp AMPS         &kp ASTRK             &kp LEFT_PARENTHESIS   &kp MINUS        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACKET   &kp DOLLAR       &kp PERCENT           &kp CARET              &kp EQUAL        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp AT                &kp HASH               &kp BACKSLASH    &trans  &trans  &trans  &trans  &trans  &trans
                                            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON    &trans  &trans  &trans
            >;

            label = "SYMBOL";
        };

        function_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8      &kp F9     &kp PRINTSCREEN    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2      &kp F3     &kp PAUSE_BREAK    &trans  &trans  &trans  &trans  &trans  &trans
                         &kp C_MENU  &kp SPACE  &kp TAB            &trans  &trans  &trans
            >;

            label = "FUNC";
        };

        media_layer {
            bindings = <
&trans  &to 0   &to 7   &to 8   &trans  &trans    &trans        &trans            &kp C_BRI_DN  &kp C_BRI_UP  &trans        &trans
&none   &trans  &none   &trans  &trans  &trans    &out OUT_TOG  &kp C_PREVIOUS    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
                        &trans  &trans  &trans    &kp C_STOP    &kp C_PLAY_PAUSE  &kp C_MUTE
            >;

            label = "MEDIA";
        };

        qwerty_layer {
            bindings = <
&trans  &kp Q            &kp W            &kp E                &kp R              &kp T     &kp Y   &kp U               &kp I                 &kp O             &kp P                &trans
&trans  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml LEFT_SHIFT F  &kp G     &kp H   &hmr RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &kp APOS
&trans  &kp Z            &kp X            &kp C                &kp V              &kp B     &kp N   &kp M               &kp COMMA             &kp DOT           &kp FSLH             &trans
                                          &trans               &trans             &trans    &trans  &trans              &trans
            >;

            label = "QWERTY";
        };

        gaming_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T    &kp Y      &kp U     &kp I           &kp O         &kp P            &to 0
&kp LCTRL  &kp A  &kp S  &kp D     &kp F      &kp G    &kp H      &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B    &kp N      &kp M     &kp COMMA       &kp DOT       &kp FSLH         &kp ESC
                         &kp LALT  &kp SPACE  &mo 9    &kp ENTER  &kp RALT  &kp RGUI
            >;

            label = "GAME";
        };

        game_ext {
            bindings = <
&kp N1  &kp N2  &trans  &kp N3  &kp N4  &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "GAME EXT";
        };
    };
};
